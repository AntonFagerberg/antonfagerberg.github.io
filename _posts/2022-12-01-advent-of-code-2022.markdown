---
layout: post
title: "Advent of Code 2022 in Go"
categories: projects
tags: advent-of-code
---

It's that time of the year again: [Advent of Code](http://adventofcode.com)!
I read a good blog post that you should always focus on doing one thing at a time -
for example, not learning a new language and solve an unknown problem at the same time.
Advent of code has been a way for me to explore different programming languages every year.
Last year I gave up on Ruby after a few problems and continued with Java - just to solve more problems.

This year my focus will be on learning [Go](https://go.dev), and because of that I
will do fewer problems (and probably focus on the smaller ones) - the goal is to learn a completely new language,
not solve as many problems as possible.

The second (bigger) challenge for me this year will be to invest a healthy amount of time into this.
It's sooo easy to get carried away and stay up way too late just to complete another problem.
This year I will need to handle that aspect better - I have three small kids now and I desperately need decent sleep
and down time.

Anyway, Go has been on my radar for a long time, it seems to be a really nice low level-ish language.
Simple but powerful. I hope it will be a good addition to my toolbox of programming languages.
I've been playing around with my old [Raspberry Pi 2 & 3](https://www.raspberrypi.com)
and Go seems to be a good fit for writing software for these low performance devices. 

Without further ado, [Advent of Code 2022 in Go!](https://github.com/AntonFagerberg/advent_of_code_2022)

### Previous years
 - [2015 in Elixir](/projects/advent-of-code-in-elixir/)
 - [2016 in Haskell](/projects/advent-of-code-2016/)
 - [2017 in Scala](/projects/advent-of-code-2017/)
 - [2018 in Java](/projects/advent-of-code-2018/)
 - [2019 in Kotlin](/projects/advent-of-code-2019/)
 - [2020 in Clojure](/projects/advent-of-code-2020/)
 - [2021 in Ruby/Java](/projects/advent-of-code-2021/)